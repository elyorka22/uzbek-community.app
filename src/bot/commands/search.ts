import TelegramBot from 'node-telegram-bot-api';
import { supabase } from '../../lib/supabase';

export async function searchCommand(bot: TelegramBot, chatId: number) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–∏–ª—å
    const { data: userProfile } = await supabase
      .from('profiles')
      .select('*')
      .eq('telegram_id', chatId)
      .single();

    if (!userProfile) {
      await bot.sendMessage(chatId, 
        'üìù –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å –¥—Ä—É–≥–∏—Ö —É–∑–±–µ–∫–æ–≤!', {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üìù –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'create_profile' }],
            [{ text: 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'main_menu' }]
          ]
        }
      });
      return;
    }

    const message = `
üîç –ü–æ–∏—Å–∫ —É–∑–±–µ–∫–æ–≤

–ù–∞–π–¥–∏—Ç–µ –¥—Ä—É–≥–∏—Ö —É–∑–±–µ–∫–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É!

–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –ø–æ:
‚Ä¢ üåç –°—Ç—Ä–∞–Ω–µ
‚Ä¢ üèôÔ∏è –ì–æ—Ä–æ–¥—É  
‚Ä¢ üéì –°—Ç–∞—Ç—É—Å—É (—Å—Ç—É–¥–µ–Ω—Ç, —Ä–∞–±–æ—Ç–∞—é, –∂–∏–≤—É)
‚Ä¢ üéØ –ò–Ω—Ç–µ—Ä–µ—Å–∞–º

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:
      `;

    const keyboard = {
      inline_keyboard: [
        [{ text: 'üîç –û—Ç–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫', callback_data: 'search_users' }],
        [{ text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'show_stats' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'main_menu' }]
      ]
    };

    await bot.sendMessage(chatId, message, {
      reply_markup: keyboard,
      parse_mode: 'HTML'
    });

  } catch (error) {
    console.error('Error in search command:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ.');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
export async function showStats(bot: TelegramBot, chatId: number) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const { data: profiles, error } = await supabase
      .from('profiles')
      .select('country, status');

    if (error) {
      console.error('Database error:', error);
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
      return;
    }

    if (!profiles || profiles.length === 0) {
      await bot.sendMessage(chatId, '–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
      return;
    }

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalUsers = profiles.length;
    const countries = new Set(profiles.map(p => p.country));
    const statuses = profiles.reduce((acc, profile) => {
      acc[profile.status] = (acc[profile.status] || 0) + 1;
      return acc;
    }, {} as Record<string, number>);

    const message = `
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Uzbek Community:

üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}
üåç –°—Ç—Ä–∞–Ω: ${countries.size}
üéì –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${statuses.student || 0}
üíº –†–∞–±–æ—Ç–∞—é—â–∏—Ö: ${statuses.working || 0}
üè† –ñ–∏–≤—É—â–∏—Ö: ${statuses.living || 0}
üìã –î—Ä—É–≥–∏—Ö: ${statuses.other || 0}

–¢–æ–ø —Å—Ç—Ä–∞–Ω:
${Array.from(countries).slice(0, 5).map(country => `‚Ä¢ ${country}`).join('\n')}
      `;

    const keyboard = {
      inline_keyboard: [
        [{ text: 'üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', callback_data: 'search_users' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'search' }]
      ]
    };

    await bot.sendMessage(chatId, message, {
      reply_markup: keyboard,
      parse_mode: 'HTML'
    });

  } catch (error) {
    console.error('Error showing stats:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
  }
} 