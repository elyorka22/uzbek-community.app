'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { 
  User, 
  Users, 
  Search, 
  MapPin, 
  GraduationCap, 
  Briefcase, 
  Home, 
  Building2, 
  ShoppingBag, 
  FileText, 
  Heart,
  MessageCircle,
  Calendar,
  Star,
  ArrowRight
} from 'lucide-react';
import { initTelegramApp, getValidatedTelegramUser } from '@/lib/telegram';

export default function HomePage() {
  const [telegramUser, setTelegramUser] = useState<any>(null);
  const [isInitialized, setIsInitialized] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
  useEffect(() => {
    const initializeApp = async () => {
      try {
        initTelegramApp();
        const user = getValidatedTelegramUser();
        if (user) {
          setTelegramUser(user);
        }
        setIsInitialized(true);
      } catch (error) {
        console.error('Error initializing Telegram Web App:', error);
        setIsInitialized(true);
      }
    };

    initializeApp();
  }, []);

  const mainFeatures = [
    {
      title: '–ü–æ–∏—Å–∫ –¥—Ä—É–∑–µ–π',
      description: '–ù–∞–π–¥–∏—Ç–µ —É–∑–±–µ–∫–æ–≤ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ',
      icon: Users,
      color: 'bg-blue-500',
      href: '/search',
      badge: '–ü–æ–ø—É–ª—è—Ä–Ω–æ'
    },
    {
      title: '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
      description: '–°–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å',
      icon: User,
      color: 'bg-green-500',
      href: '/profile'
    },
    {
      title: '–ù–æ–≤–∏—á–∫–∞–º',
      description: '–ì–∏–¥ –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–µ',
      icon: GraduationCap,
      color: 'bg-purple-500',
      href: '/newcomers',
      badge: '–ù–æ–≤–æ–µ'
    },
    {
      title: '–Æ—Ä–∏—Å—Ç—ã',
      description: '–ù–∞–π–¥–∏—Ç–µ —é—Ä–∏—Å—Ç–æ–≤-—É–∑–±–µ–∫–æ–≤',
      icon: Building2,
      color: 'bg-orange-500',
      href: '/lawyers'
    },
    {
      title: '–•–∞–ª—è–ª –º–∞–≥–∞–∑–∏–Ω—ã',
      description: '–ö–∞—Ä—Ç–∞ —Ö–∞–ª—è–ª –º–∞–≥–∞–∑–∏–Ω–æ–≤',
      icon: ShoppingBag,
      color: 'bg-emerald-500',
      href: '/halal-shops'
    },
    {
      title: '–†–∞–±–æ—Ç–∞',
      description: '–í–∞–∫–∞–Ω—Å–∏–∏ –∏ –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã',
      icon: Briefcase,
      color: 'bg-indigo-500',
      href: '/jobs'
    },
    {
      title: '–ñ–∏–ª—å–µ',
      description: '–ü–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä –∏ –∫–æ–º–Ω–∞—Ç',
      icon: Home,
      color: 'bg-pink-500',
      href: '/housing'
    },
    {
      title: '–°–æ–±—ã—Ç–∏—è',
      description: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
      icon: Calendar,
      color: 'bg-red-500',
      href: '/events'
    }
  ];

  const quickActions = [
    {
      title: '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥–æ—Ä–æ–¥',
      icon: MapPin,
      action: 'location'
    },
    {
      title: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç',
      description: '–û–±—â–∏–π —á–∞—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
      icon: MessageCircle,
      action: 'chat'
    },
    {
      title: '–ü–æ–º–æ—â—å',
      description: 'FAQ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      icon: FileText,
      action: 'help'
    }
  ];

  if (!isInitialized) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-gradient-to-r from-blue-500 to-purple-600 text-white">
        <div className="max-w-4xl mx-auto px-4 py-8 md:ml-64">
          <div className="text-center">
            <div className="flex justify-center mb-4">
              <div className="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center">
                <Users className="w-8 h-8" />
              </div>
            </div>
            <h1 className="text-3xl font-bold mb-2">
              Uzbek Community
            </h1>
            <p className="text-blue-100">
              –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —É–∑–±–µ–∫–æ–≤ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π
            </p>
            {telegramUser && (
              <p className="text-sm text-blue-200 mt-2">
                –ü—Ä–∏–≤–µ—Ç, {telegramUser.first_name}! üëã
              </p>
            )}
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 py-6 md:ml-64">
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">
            –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {mainFeatures.map((feature, index) => {
              const Icon = feature.icon;
              return (
                <Link
                  key={index}
                  href={feature.href}
                  className="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow group"
                >
                  <div className="flex items-start space-x-4">
                    <div className={`w-12 h-12 ${feature.color} rounded-lg flex items-center justify-center flex-shrink-0`}>
                      <Icon className="w-6 h-6 text-white" />
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center space-x-2 mb-1">
                        <h3 className="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                          {feature.title}
                        </h3>
                        {feature.badge && (
                          <span className="px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded-full">
                            {feature.badge}
                          </span>
                        )}
                      </div>
                      <p className="text-gray-600 text-sm mb-2">
                        {feature.description}
                      </p>
                      <div className="flex items-center text-blue-500 text-sm font-medium">
                        <span>–û—Ç–∫—Ä—ã—Ç—å</span>
                        <ArrowRight className="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform" />
                      </div>
                    </div>
                  </div>
                </Link>
              );
            })}
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {quickActions.map((action, index) => {
              const Icon = action.icon;
              return (
                <button
                  key={index}
                  onClick={() => {
                    if (action.action === 'location') {
                      // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
                      alert('–§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ');
                    } else if (action.action === 'chat') {
                      // –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
                      window.open('https://t.me/uzbek_community_chat', '_blank');
                    } else if (action.action === 'help') {
                      // –û—Ç–∫—Ä—ã—Ç—å –ø–æ–º–æ—â—å
                      window.open('https://t.me/uzbek_community_support', '_blank');
                    }
                  }}
                  className="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow text-left group"
                >
                  <div className="flex items-start space-x-4">
                    <div className="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center flex-shrink-0">
                      <Icon className="w-6 h-6 text-gray-600" />
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                        {action.title}
                      </h3>
                      <p className="text-gray-600 text-sm">
                        {action.description}
                      </p>
                    </div>
                  </div>
                </button>
              );
            })}
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
          <h2 className="text-2xl font-bold text-gray-900 text-center mb-6">
            –ù–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </h2>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
            <div>
              <div className="text-2xl font-bold text-blue-500 mb-1">1000+</div>
              <div className="text-gray-600 text-sm">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-green-500 mb-1">50+</div>
              <div className="text-gray-600 text-sm">–°—Ç—Ä–∞–Ω</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-purple-500 mb-1">100+</div>
              <div className="text-gray-600 text-sm">–ì—Ä—É–ø–ø</div>
            </div>
            <div>
              <div className="text-2xl font-bold text-orange-500 mb-1">5000+</div>
              <div className="text-gray-600 text-sm">–°–≤—è–∑–µ–π</div>
            </div>
          </div>
        </div>

        {/* –§—É—Ç–µ—Ä */}
        <div className="text-center text-gray-500 text-sm">
          <p>&copy; 2024 Uzbek Community. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </div>
      </div>
    </div>
  );
}
